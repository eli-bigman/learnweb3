/**
* This code was generated by v0 by Vercel.
* @see https://v0.dev/t/V56IqZAfLzT
* Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
*/

/** Add fonts into your Next.js project:

import { Libre_Franklin } from 'next/font/google'
import { Chivo } from 'next/font/google'

libre_franklin({
  subsets: ['latin'],
  display: 'swap',
})

chivo({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/

import React from "react";
import Header from "./Header";
import Playground from "./Playground";
import CodeDisplay from "./CodeDisplay";
import AIResponse from "./AIResponse";

export default function Chainlink() {
  const codeResponse = ` 
    // Import Web3.js
    import Web3 from 'web3';

    // Connect to Ethereum network
    const web3 = new Web3('https://mainnet.infura.io/v3/YOUR_PROJECT_ID');

    // Get current prices of cryptocurrencies
    async function getCryptoPrices() {
      const btcPrice = await web3.eth.getBalance('0x1BdE23A5d32Ad6A9CC02Ca1393b2CaB1f2f79Ec1');
      const ethPrice = await web3.eth.getBalance('0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae');
      const linkPrice = await web3.eth.getBalance('0x514910771af9ca656af840dff83e8264ecf986ca');

      return {
        btcPrice: web3.utils.fromWei(btcPrice, 'ether'),
        ethPrice: web3.utils.fromWei(ethPrice, 'ether'),
        linkPrice: web3.utils.fromWei(linkPrice, 'ether'),
      };
    }

    // Handle user guesses
    async function handleGuesses(btcGuess, ethGuess, linkGuess) {
      const prices = await getCryptoPrices();

      let score = 0;
      if (Math.abs(btcGuess - prices.btcPrice) < 1000) score += 1;
      if (Math.abs(ethGuess - prices.ethPrice) < 100) score += 1;
      if (Math.abs(linkGuess - prices.linkPrice) < 5) score += 1;

      return score;
    }
  `;

  return (
    <div className="flex flex-col min-h-screen bg-background text-foreground">
      <Header />
      <main className="container mx-auto grid grid-cols-1 gap-8 p-4 sm:grid-cols-2 lg:grid-cols-3 lg:p-8">
        <div className="col-span-1 lg:col-span-2">
          <Playground />
        </div>
        <div className="col-span-1 lg:col-span-1 flex flex-col gap-8">
          <CodeDisplay codeResponse={codeResponse} />
          <AIResponse />
        </div>
      </main>
    </div>
  );
}